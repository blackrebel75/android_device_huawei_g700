From 2a2d573a28b260fa24501e27581fa0bf7761d8cd Mon Sep 17 00:00:00 2001
From: blackrebel <72fabio1@virgilio.it>
Date: Thu, 14 Jun 2018 19:18:22 +0200
Subject: [PATCH 5/9] [MTK] Fix omx for mtk codec blob

---
 include/media/openmax/OMX_AsString.h |   3 +-
 include/media/openmax/OMX_Core.h     |   5 -
 include/media/openmax/OMX_IVCommon.h |   2 +-
 include/media/openmax/OMX_Index.h    |   4 +-
 include/media/openmax/OMX_IndexExt.h |   3 +-
 include/media/openmax/OMX_Video.h    | 189 +----------------------------------
 include/media/openmax/OMX_VideoExt.h |   3 +-
 7 files changed, 6 insertions(+), 203 deletions(-)

diff --git a/include/media/openmax/OMX_AsString.h b/include/media/openmax/OMX_AsString.h
index 11bd6e859..0f177a126 100644
--- a/include/media/openmax/OMX_AsString.h
+++ b/include/media/openmax/OMX_AsString.h
@@ -896,7 +896,6 @@ inline static const char *asString(
     }
 }
 
-#ifndef MTK_VIDEO_HEVC_SUPPORT
 inline static const char *asString(OMX_VIDEO_HEVCPROFILETYPE i, const char *def = "!!") {
     switch (i) {
         case OMX_VIDEO_HEVCProfileUnknown: return "Unknown";  // unused
@@ -938,7 +937,7 @@ inline static const char *asString(OMX_VIDEO_HEVCLEVELTYPE i, const char *def =
         default:                            return def;
     }
 }
-#endif
+
 #endif // AS_STRING_FOR_OMX_VIDEOEXT_H
 
 #endif // OMX_VideoExt_h
diff --git a/include/media/openmax/OMX_Core.h b/include/media/openmax/OMX_Core.h
index 7dc5e5b4a..99bd0e532 100644
--- a/include/media/openmax/OMX_Core.h
+++ b/include/media/openmax/OMX_Core.h
@@ -413,10 +413,6 @@ typedef struct OMX_PARAM_COMPONENTROLETYPE {
 // <--- Morris Yang 20110322 add for RV resizing
 #define OMX_BUFFERFLAG_SPECIFYRESOLUTION 0x00000100
 
-// for 3D stereo
-#define OMX_BUFFERFLAG_3D_SIDEBYSIDE   0x00000200
-#define OMX_BUFFERFLAG_3D_TOPANDBOTTOM 0x00000400
-//
 // for invalid pts file
 #define OMX_BUFFERFLAG_INVALID_TIMESTAMP 0x00000800
 #endif
@@ -508,7 +504,6 @@ typedef struct OMX_PORT_PARAM_TYPE {
     OMX_U32 nStartPortNumber;   /** first port number for this type of port */
 } OMX_PORT_PARAM_TYPE;
 
-
 /** @ingroup comp */
 typedef enum OMX_EVENTTYPE
 {
diff --git a/include/media/openmax/OMX_IVCommon.h b/include/media/openmax/OMX_IVCommon.h
index fc8ccffb2..d998ac782 100644
--- a/include/media/openmax/OMX_IVCommon.h
+++ b/include/media/openmax/OMX_IVCommon.h
@@ -167,10 +167,10 @@ typedef enum OMX_COLOR_FORMATTYPE {
      *  codec can substitute any YUV420 packed planar or semiplanar
      *  format for it. */
     OMX_COLOR_FormatYUV420Flexible = 0x7F420888,
+    OMX_TI_COLOR_FormatYUV420PackedSemiPlanar = 0x7F000100,
 #ifdef MTK_HARDWARE
     OMX_MTK_COLOR_FormatYV12 = 0x7F000200,
 #endif
-    OMX_TI_COLOR_FormatYUV420PackedSemiPlanar = 0x7F000100,
     OMX_QCOM_COLOR_FormatYVU420SemiPlanar = 0x7FA30C00,
     OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar64x32Tile2m8ka = 0x7FA30C03,
     OMX_SEC_COLOR_FormatNV12Tiled = 0x7FC00002,
diff --git a/include/media/openmax/OMX_Index.h b/include/media/openmax/OMX_Index.h
index 4cb82fd2e..f8af98caa 100644
--- a/include/media/openmax/OMX_Index.h
+++ b/include/media/openmax/OMX_Index.h
@@ -182,7 +182,6 @@ typedef enum OMX_INDEXTYPE {
     OMX_IndexParamVideoRv,                  /**< reference: OMX_VIDEO_PARAM_RVTYPE */
     OMX_IndexParamVideoAvc,                 /**< reference: OMX_VIDEO_PARAM_AVCTYPE */
     OMX_IndexParamVideoH263,                /**< reference: OMX_VIDEO_PARAM_H263TYPE */
-    OMX_IndexParamVideoVp8, 				        /**< reference: OMX_VIDEO_PARAM_VP8TYPE */
     OMX_IndexParamVideoProfileLevelQuerySupported, /**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE */
     OMX_IndexParamVideoProfileLevelCurrent, /**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE */
     OMX_IndexConfigVideoBitrate,            /**< reference: OMX_VIDEO_CONFIG_BITRATETYPE */
@@ -270,7 +269,7 @@ typedef enum OMX_INDEXTYPE {
     OMX_GoogleAndroidIndexEnableAndroidNativeBuffers,
     OMX_GoogleAndroidIndexUseAndroidNativeBuffer,
     OMX_GoogleAndroidIndexGetAndroidNativeBufferUsage,
-    OMX_GoogleAndroidIndexStoreMetaDataInBuffers,   // for live effect recording
+    OMX_GoogleAndroidIndexStoreMetaDataInBuffers,   // Morris Yang 20120214 add for live effect recording
     OMX_IndexVendorMtkOmxPartialFrameQuerySupported,
 
 	OMX_IndexVendorMtkOmxVdecThumbnailMode,
@@ -278,7 +277,6 @@ typedef enum OMX_INDEXTYPE {
     OMX_IndexVendorMtkOmxVdecSwitchBwTVout,
     OMX_IndexVendorMtkOmxVencSetForceIframe,
     OMX_IndexVendorMtkOmxVencSetTimelapseMode,
-    OMX_IndexVendorMtkOmxVencSetWhiteboardEffectMode,
     OMX_IndexVendorMtkOmxVencSetMCIMode,
 
     OMX_IndexVendorMtkOmxVdecConcealmentLevel,
diff --git a/include/media/openmax/OMX_IndexExt.h b/include/media/openmax/OMX_IndexExt.h
index 45eabf71d..ea3d0dadb 100644
--- a/include/media/openmax/OMX_IndexExt.h
+++ b/include/media/openmax/OMX_IndexExt.h
@@ -70,8 +70,7 @@ typedef enum OMX_INDEXEXTTYPE {
     OMX_IndexParamNalStreamFormatSupported,         /**< reference: OMX_NALSTREAMFORMATTYPE */
     OMX_IndexParamNalStreamFormat,                  /**< reference: OMX_NALSTREAMFORMATTYPE */
     OMX_IndexParamNalStreamFormatSelect,            /**< reference: OMX_NALSTREAMFORMATTYPE */
-    //re-defined in OMX_Index.h
-    //OMX_IndexParamVideoVp8,                         /**< reference: OMX_VIDEO_PARAM_VP8TYPE */
+    OMX_IndexParamVideoVp8,                         /**< reference: OMX_VIDEO_PARAM_VP8TYPE */
     OMX_IndexConfigVideoVp8ReferenceFrame,          /**< reference: OMX_VIDEO_VP8REFERENCEFRAMETYPE */
     OMX_IndexConfigVideoVp8ReferenceFrameType,      /**< reference: OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE */
     OMX_IndexParamVideoAndroidVp8Encoder,           /**< reference: OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE */
diff --git a/include/media/openmax/OMX_Video.h b/include/media/openmax/OMX_Video.h
index ef4ffb5a5..819efa06c 100644
--- a/include/media/openmax/OMX_Video.h
+++ b/include/media/openmax/OMX_Video.h
@@ -85,6 +85,7 @@ typedef enum OMX_VIDEO_CODINGTYPE {
     OMX_VIDEO_CodingRV,         /**< all versions of Real Video */
     OMX_VIDEO_CodingAVC,        /**< H.264/AVC */
     OMX_VIDEO_CodingMJPEG,      /**< Motion JPEG */
+//    OMX_VIDEO_CodingVPX,        /**< VPX added by Legis Lu 20110714*/
     OMX_VIDEO_CodingVP8,        /**< Google VP8, formerly known as On2 VP8 */
     OMX_VIDEO_CodingVP9,        /**< Google VP9 */
     OMX_VIDEO_CodingHEVC,       /**< ITU H.265/HEVC */
@@ -844,70 +845,6 @@ typedef enum OMX_VIDEO_AVCLOOPFILTERTYPE {
     OMX_VIDEO_AVCLoopFilterMax = 0x7FFFFFFF
 } OMX_VIDEO_AVCLOOPFILTERTYPE;
 
-#ifdef MTK_HARDWARE
-#ifdef MTK_VIDEO_HEVC_SUPPORT
-/** 
- * HEVC profile types, each profile indicates support for various 
- * performance bounds and different annexes.
- */
-typedef enum OMX_VIDEO_HEVCPROFILETYPE {
-    OMX_VIDEO_HEVCProfileBaseline = 0x01,   /**< Baseline profile */
-    OMX_VIDEO_HEVCProfileMain     = 0x02,   /**< Main profile */
-    OMX_VIDEO_HEVCProfileExtended = 0x04,   /**< Extended profile */
-    OMX_VIDEO_HEVCProfileHigh     = 0x08,   /**< High profile */
-    OMX_VIDEO_HEVCProfileHigh10   = 0x10,   /**< High 10 profile */
-    OMX_VIDEO_HEVCProfileHigh422  = 0x20,   /**< High 4:2:2 profile */
-    OMX_VIDEO_HEVCProfileHigh444  = 0x40,   /**< High 4:4:4 profile */
-    OMX_VIDEO_HEVCProfileKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
-    OMX_VIDEO_HEVCProfileVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
-    OMX_VIDEO_HEVCProfileMax      = 0x7FFFFFFF  
-} OMX_VIDEO_HEVCPROFILETYPE;
-
-
-/** 
- * HEVC level types, each level indicates support for various frame sizes, 
- * bit rates, decoder frame rates.  No need 
- */
-typedef enum OMX_VIDEO_HEVCLEVELTYPE {
-    OMX_VIDEO_HEVCLevel1   = 0x01,     /**< Level 1 */
-    OMX_VIDEO_HEVCLevel1b  = 0x02,     /**< Level 1b */
-    OMX_VIDEO_HEVCLevel11  = 0x04,     /**< Level 1.1 */
-    OMX_VIDEO_HEVCLevel12  = 0x08,     /**< Level 1.2 */
-    OMX_VIDEO_HEVCLevel13  = 0x10,     /**< Level 1.3 */
-    OMX_VIDEO_HEVCLevel2   = 0x20,     /**< Level 2 */
-    OMX_VIDEO_HEVCLevel21  = 0x40,     /**< Level 2.1 */
-    OMX_VIDEO_HEVCLevel22  = 0x80,     /**< Level 2.2 */
-    OMX_VIDEO_HEVCLevel3   = 0x100,    /**< Level 3 */
-    OMX_VIDEO_HEVCLevel31  = 0x200,    /**< Level 3.1 */
-    OMX_VIDEO_HEVCLevel32  = 0x400,    /**< Level 3.2 */
-    OMX_VIDEO_HEVCLevel4   = 0x800,    /**< Level 4 */
-    OMX_VIDEO_HEVCLevel41  = 0x1000,   /**< Level 4.1 */
-    OMX_VIDEO_HEVCLevel42  = 0x2000,   /**< Level 4.2 */
-    OMX_VIDEO_HEVCLevel5   = 0x4000,   /**< Level 5 */
-    OMX_VIDEO_HEVCLevel51  = 0x8000,   /**< Level 5.1 */
-    OMX_VIDEO_HEVCLevelKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
-    OMX_VIDEO_HEVCLevelVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
-    OMX_VIDEO_HEVCLevelMax = 0x7FFFFFFF  
-} OMX_VIDEO_HEVCLEVELTYPE;
-
-
-/** 
- * HEVC loop filter modes 
- *
- * OMX_VIDEO_HEVCLoopFilterEnable               : Enable
- * OMX_VIDEO_HEVCLoopFilterDisable              : Disable
- * OMX_VIDEO_HEVCLoopFilterDisableSliceBoundary : Disabled on slice boundaries
- */
-typedef enum OMX_VIDEO_HEVCLOOPFILTERTYPE {
-    OMX_VIDEO_HEVCLoopFilterEnable = 0,
-    OMX_VIDEO_HEVCLoopFilterDisable,
-    OMX_VIDEO_HEVCLoopFilterDisableSliceBoundary,
-    OMX_VIDEO_HEVCLoopFilterKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
-    OMX_VIDEO_HEVCLoopFilterVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
-    OMX_VIDEO_HEVCLoopFilterMax = 0x7FFFFFFF
-} OMX_VIDEO_HEVCLOOPFILTERTYPE;
-#endif
-#endif
 
 /**
  * AVC params
@@ -992,92 +929,6 @@ typedef struct OMX_VIDEO_PARAM_AVCTYPE {
     OMX_VIDEO_AVCLOOPFILTERTYPE eLoopFilterMode;
 } OMX_VIDEO_PARAM_AVCTYPE;
 
-#ifdef MTK_HARDWARE
-#ifdef MTK_VIDEO_HEVC_SUPPORT
-/** 
- * HEVC params 
- *
- * STRUCT MEMBERS:
- *  nSize                     : Size of the structure in bytes
- *  nVersion                  : OMX specification version information
- *  nPortIndex                : Port that this structure applies to
- *  nSliceHeaderSpacing       : Number of macroblocks between slice header, put  
- *                              zero if not used
- *  nPFrames                  : Number of P frames between each I frame
- *  nBFrames                  : Number of B frames between each I frame
- *  bUseHadamard              : Enable/disable Hadamard transform
- *  nRefFrames                : Max number of reference frames to use for inter
- *                              motion search (1-16)
- *  nRefIdxTrailing           : Pic param set ref frame index (index into ref
- *                              frame buffer of trailing frames list), B frame
- *                              support
- *  nRefIdxForward            : Pic param set ref frame index (index into ref
- *                              frame buffer of forward frames list), B frame
- *                              support
- *  bEnableUEP                : Enable/disable unequal error protection. This 
- *                              is only valid of data partitioning is enabled.
- *  bEnableFMO                : Enable/disable flexible macroblock ordering
- *  bEnableASO                : Enable/disable arbitrary slice ordering
- *  bEnableRS                 : Enable/disable sending of redundant slices
- *  eProfile                  : HEVC profile(s) to use
- *  eLevel                    : HEVC level(s) to use
- *  nAllowedPictureTypes      : Specifies the picture types allowed in the 
- *                              bitstream
- *  bFrameMBsOnly             : specifies that every coded picture of the 
- *                              coded video sequence is a coded frame 
- *                              containing only frame macroblocks
- *  bMBAFF                    : Enable/disable switching between frame and 
- *                              field macroblocks within a picture
- *  bEntropyCodingCABAC       : Entropy decoding method to be applied for the 
- *                              syntax elements for which two descriptors appear 
- *                              in the syntax tables
- *  bWeightedPPrediction      : Enable/disable weighted prediction shall not 
- *                              be applied to P and SP slices
- *  nWeightedBipredicitonMode : Default weighted prediction is applied to B 
- *                              slices 
- *  bconstIpred               : Enable/disable intra prediction
- *  bDirect8x8Inference       : Specifies the method used in the derivation 
- *                              process for luma motion vectors for B_Skip, 
- *                              B_Direct_16x16 and B_Direct_8x8 as specified 
- *                              in subclause 8.4.1.2 of the HEVC spec 
- *  bDirectSpatialTemporal    : Flag indicating spatial or temporal direct
- *                              mode used in B slice coding (related to 
- *                              bDirect8x8Inference) . Spatial direct mode is 
- *                              more common and should be the default.
- *  nCabacInitIdx             : Index used to init CABAC contexts
- *  eLoopFilterMode           : Enable/disable loop filter
- */
-typedef struct OMX_VIDEO_PARAM_HEVCTYPE {
-    OMX_U32 nSize;                 
-    OMX_VERSIONTYPE nVersion;      
-    OMX_U32 nPortIndex;            
-    OMX_U32 nSliceHeaderSpacing;  
-    OMX_U32 nPFrames;     
-    OMX_U32 nBFrames;     
-    OMX_BOOL bUseHadamard;
-    OMX_U32 nRefFrames;  
-	OMX_U32 nRefIdx10ActiveMinus1;
-	OMX_U32 nRefIdx11ActiveMinus1;
-    OMX_BOOL bEnableUEP;  
-    OMX_BOOL bEnableFMO;  
-    OMX_BOOL bEnableASO;  
-    OMX_BOOL bEnableRS;   
-    OMX_VIDEO_HEVCPROFILETYPE eProfile;
-	OMX_VIDEO_HEVCLEVELTYPE eLevel; 
-    OMX_U32 nAllowedPictureTypes;  
-	OMX_BOOL bFrameMBsOnly;        									
-    OMX_BOOL bMBAFF;               
-    OMX_BOOL bEntropyCodingCABAC;  
-    OMX_BOOL bWeightedPPrediction; 
-    OMX_U32 nWeightedBipredicitonMode; 
-    OMX_BOOL bconstIpred ;
-    OMX_BOOL bDirect8x8Inference;  
-	OMX_BOOL bDirectSpatialTemporal;
-	OMX_U32 nCabacInitIdc;
-	OMX_VIDEO_HEVCLOOPFILTERTYPE eLoopFilterMode;
-} OMX_VIDEO_PARAM_HEVCTYPE;
-#endif
-#endif
 typedef struct OMX_VIDEO_PARAM_PROFILELEVELTYPE {
    OMX_U32 nSize;
    OMX_VERSIONTYPE nVersion;
@@ -1169,23 +1020,6 @@ typedef enum OMX_VIDEO_AVCSLICEMODETYPE {
     OMX_VIDEO_SLICEMODE_AVCLevelMax = 0x7FFFFFFF
 } OMX_VIDEO_AVCSLICEMODETYPE;
 
-#ifdef MTK_VIDEO_HEVC_SUPPORT
-/** 
- * HEVC Slice Mode modes 
- *
- * OMX_VIDEO_SLICEMODE_HEVCDefault   : Normal frame encoding, one slice per frame
- * OMX_VIDEO_SLICEMODE_HEVCMBSlice   : NAL mode, number of MBs per frame
- * OMX_VIDEO_SLICEMODE_HEVCByteSlice : NAL mode, number of bytes per frame
- */
-typedef enum OMX_VIDEO_HEVCSLICEMODETYPE {
-    OMX_VIDEO_SLICEMODE_HEVCDefault = 0,
-    OMX_VIDEO_SLICEMODE_HEVCMBSlice,
-    OMX_VIDEO_SLICEMODE_HEVCByteSlice,
-    OMX_VIDEO_SLICEMODE_HEVCKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
-    OMX_VIDEO_SLICEMODE_HEVCVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
-    OMX_VIDEO_SLICEMODE_HEVCLevelMax = 0x7FFFFFFF
-} OMX_VIDEO_HEVCSLICEMODETYPE;
-#endif
 /**
  * AVC FMO Slice Mode Params
  *
@@ -1205,27 +1039,6 @@ typedef struct OMX_VIDEO_PARAM_AVCSLICEFMO {
     OMX_U8 nSliceGroupMapType;
     OMX_VIDEO_AVCSLICEMODETYPE eSliceMode;
 } OMX_VIDEO_PARAM_AVCSLICEFMO;
-#ifdef MTK_VIDEO_HEVC_SUPPORT
-/** 
- * HEVC FMO Slice Mode Params 
- *
- * STRUCT MEMBERS:
- *  nSize      : Size of the structure in bytes
- *  nVersion   : OMX specification version information
- *  nPortIndex : Port that this structure applies to
- *  nNumSliceGroups : Specifies the number of slice groups
- *  nSliceGroupMapType : Specifies the type of slice groups
- *  eSliceMode : Specifies the type of slice
- */
-typedef struct OMX_VIDEO_PARAM_HEVCSLICEFMO {
-    OMX_U32 nSize; 
-    OMX_VERSIONTYPE nVersion;
-    OMX_U32 nPortIndex;
-    OMX_U8 nNumSliceGroups;
-    OMX_U8 nSliceGroupMapType;
-    OMX_VIDEO_HEVCSLICEMODETYPE eSliceMode;
-} OMX_VIDEO_PARAM_HEVCSLICEFMO;
-#endif
 
 /**
  * AVC IDR Period Configs
diff --git a/include/media/openmax/OMX_VideoExt.h b/include/media/openmax/OMX_VideoExt.h
index c738bd266..3c97e14a7 100644
--- a/include/media/openmax/OMX_VideoExt.h
+++ b/include/media/openmax/OMX_VideoExt.h
@@ -145,7 +145,6 @@ typedef struct OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE {
     OMX_U32 nMaxQuantizer;
 } OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE;
 
-#ifndef MTK_VIDEO_HEVC_SUPPORT
 /** HEVC Profile enum type */
 typedef enum OMX_VIDEO_HEVCPROFILETYPE {
     OMX_VIDEO_HEVCProfileUnknown = 0x0,
@@ -194,7 +193,7 @@ typedef struct OMX_VIDEO_PARAM_HEVCTYPE {
     OMX_VIDEO_HEVCPROFILETYPE eProfile;
     OMX_VIDEO_HEVCLEVELTYPE eLevel;
 } OMX_VIDEO_PARAM_HEVCTYPE;
-#endif
+
 /** Structure to define if dependent slice segments should be used */
 typedef struct OMX_VIDEO_SLICESEGMENTSTYPE {
     OMX_U32 nSize;
-- 
2.15.1

